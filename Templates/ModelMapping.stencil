import CoreData

{% for type in types.based.BaseModel %}
extension {{ type.name }} {
    func getCDObject(using coreDataManager: CoreDataManager, context: NSManagedObjectContext) -> CD{{ type.name }} {
        return coreDataManager.getExistingOrNew(entity: self, context: context)
    }
}
{% endfor %}

extension CoreDataManagerImpl {

    func deleteAllData(context: NSManagedObjectContext) {
        let entities = [
        {% for type in types.based.BaseModel %}
            CD{{ type.name }}.self{% if not forloop.last %},{% endif %}
        {% endfor %}
        ]

        entities.forEach { deleteAllEntities(entity: $0, context: context) }
    }

}
